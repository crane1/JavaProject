<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lizem.dao.StudentMapper" >
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" eviction="LRU">
   </cache>
	
  <resultMap id="BaseResultMap" type="lizem.model.Student" >
   	<id column="ID" property="id" jdbcType="VARCHAR"/>
   	<result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="PWD" property="pwd" jdbcType="VARCHAR" />
    <result column="QX" property="qx" jdbcType="DECIMAL" />
    <result column="LIKES" property="likes" jdbcType="VARCHAR" />
    <association column="CID" property="contry"  javaType="Contry" select="lizem.dao.ContryMapper.selectByPrimaryKey"></association>
  </resultMap>
  <sql id="Base_Column_List" >
    ID, PWD, NAME, QX, LIKES
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from USERS
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByPrimaryKeys" resultMap="BaseResultMap" parameterType="java.util.List" >
   select 
  	 u.ID, u.NAME, u.PWD, u.QX, u.LIKES, u.CONID, c.ID AS CID, c.NAME AS CNAME
    from USERS u, CONTRY c
    where u.CONID=c.ID ANd u.ID in
		<foreach collection="list" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
  </select>
  
  <select id="selectByPrimaryKeys2" resultMap="BaseResultMap" parameterType="java.util.Map" >
   select 
  	 u.ID, u.NAME, u.PWD, u.QX, u.LIKES, u.CONID, c.ID AS CID, c.NAME AS CNAME
    from USERS u, CONTRY c
    where u.CONID=c.ID ANd u.ID in
		<foreach collection="ids" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
  </select>
  
   <select id="selectByPrimaryName" resultMap="BaseResultMap" parameterType="java.lang.String" >
   	<bind name="pattern" value="'%'+_parameter+'%'"/> 
    select 
    <include refid="Base_Column_List" />
    from USERS
    where name like #{pattern}
   <!--  where name like concat(concat('%',#{name,jdbcType=VARCHAR}),'%')   -->
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from USERS
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="lizem.model.Student" >
  	<selectKey resultType="String" keyProperty="id" order="BEFORE"> 
		select usersid_seq.nextval as id from dual 
	</selectKey> 

    insert into USERS (ID, PWD, NAME, 
      QX, LIKES)
    values (#{id,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{qx,jdbcType=DECIMAL}, #{likes,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="lizem.model.Student" >
    insert into USERS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="pwd != null" >
        PWD,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="qx != null" >
        QX,
      </if>
      <if test="likes != null" >
        LIKES,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="qx != null" >
        #{qx,jdbcType=DECIMAL},
      </if>
      <if test="likes != null" >
        #{likes,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="lizem.model.Student" >
    update USERS
    <set >
      <if test="pwd != null" >
        PWD = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="qx != null" >
        QX = #{qx,jdbcType=DECIMAL},
      </if>
      <if test="likes != null" >
        LIKES = #{likes,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="lizem.model.Student" >
    update USERS
    set PWD = #{pwd,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      QX = #{qx,jdbcType=DECIMAL},
      LIKES = #{likes,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 外联 -->
 <!--  <resultMap id="ContryInfo" type="lizem.model.Contry" >
  		<result column="CID" property="id" jdbcType="DECIMAL" />
    	<result column="CNAME" property="name" jdbcType="VARCHAR" />
  </resultMap> -->
  
  <resultMap id="StuInfo" type="lizem.model.Student" >
  	<constructor>
    	<idArg column="ID" javaType="sTRING" jdbcType="VARCHAR"/>
    	<arg column="NAME" javaType="String" jdbcType="VARCHAR" />
    </constructor>
    <result column="PWD" property="pwd" jdbcType="VARCHAR" />
    <result column="QX" property="qx" jdbcType="DECIMAL" />
    <result column="LIKES" property="likes" jdbcType="VARCHAR" />
    <!-- <association property="contry" resultMap="ContryInfo">
    </association> -->
    <association column="CID" property="contry"  javaType="Contry" select="lizem.dao.ContryMapper.selectByPrimaryKey"></association>
  </resultMap>
  
  
  <select id="selectStudenByid" resultMap="StuInfo" parameterType="java.lang.String">
  	 select 
  	 u.ID, u.NAME, u.PWD, u.QX, u.LIKES, u.CONID, c.ID AS CID, c.NAME AS CNAME
    from USERS u, CONTRY c
    where u.CONID=c.ID ANd u.ID = #{id,jdbcType=VARCHAR}
  </select>
  
  
</mapper>